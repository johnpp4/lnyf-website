{"version":3,"file":"component---src-pages-people-js-c1c2abbd37d856255ee4.js","mappings":"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","sources":["webpack://lnyf/./src/utils/convertImgArrToMap.js","webpack://lnyf/./src/components/FlipCard.js","webpack://lnyf/./src/pages/people.js","webpack://lnyf/./src/components/TwoColumn.js","webpack://lnyf/./src/components/InnerPage.js","webpack://lnyf/./src/components/StyledImage.js"],"sourcesContent":["const convertImgDataToMap = (imgData) => {\n  return imgData.reduce(function (map, obj) {\n    map[obj.name] = obj;\n    return map;\n  }, {});\n};\n\nexport default convertImgDataToMap;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport StyledImage from \"../components/StyledImage\";\nimport Typography from \"../components/Typography\";\n\nconst CardContainer = styled.div`\n  height: 0px;\n  padding-bottom: 125%;\n  width: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  box-sizing: border-box;\n  &.flipped {\n      .front {\n          transform: rotateY(180deg);\n      }\n      .back {\n          transform: rotateY(0deg);\n      }\n  }\n`;\n\nconst Back = styled.div`\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  background: $new-white;\n  position: absolute !important;\n  border-radius: 10px;\n  border: ${({ theme }) => theme.decoration.borderHover};\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  transition: -webkit-transform ease 500ms;\n  transition: transform ease 500ms;\n  background: $new-white;\n  transform: rotateY(-180deg);\n  padding: 5px;\n  font-size: 10vw;\n  background-color: ${({ theme }) => theme.palette.primarybackground};\n  color: ${({ theme }) => theme.palette.primaryfont};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  ${({ clickable, theme }) => {\n    return (\n      (clickable === true || clickable === \"true\") &&\n      `\n      cursor: pointer;\n      \n      &:hover {\n        border: ${theme.decoration.borderHover};\n      }`\n    );\n  }}\n`;\n\nconst ImageThumbnail = styled(StyledImage)`\n    height: 0px;\n    padding-bottom: 125%;\n    box-sizing: border-box;\n    display: block !important;\n    background: $new-white;\n    position: absolute !important;\n    border-radius: 10px;\n    backface-visibility: hidden;\n    transform-style: preserve-3d;\n    transition: -webkit-transform ease 500ms;\n    transition: transform ease 500ms;\n    z-index: 2;\n    transform: rotateY(0deg);\n`;\n\nconst SecTitle = styled(Typography)`\n  padding-top: 7%;\n  padding-bottom: 4%;\n`;\n\nclass FlipCard extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { flipped: false };\n      this.flip = this.flip.bind(this);\n    }\n  \n    flip = () => {\n      this.setState({ flipped: !this.state.flipped });\n    }\n    render() {\n      return (\n        <CardContainer onClick={this.flip} className={\"card-container\" + (this.state.flipped ? \" flipped\" : \"\")}>\n            <ImageThumbnail\n                image={this.props.image}\n                clickable=\"true\" \n                alt={this.props.alt}\n                className=\"front\"\n            />\n            <Back className=\"back\" clickable=\"true\">\n                <div>\n                    <SecTitle variant=\"subtitle\">Majors</SecTitle>\n                    <Typography variant=\"caption\">{this.props.major}</Typography>\n                </div>\n                <div>\n                    <SecTitle variant=\"subtitle\">Zodiac</SecTitle>\n                    <Typography variant=\"caption\">{this.props.zodiac}</Typography>\n                </div>\n                <div>\n                    <SecTitle variant=\"subtitle\">What LNYF means to me:</SecTitle>\n                    <Typography variant=\"caption2\">{this.props.facts}</Typography>\n                </div>\n            </Back>\n        </CardContainer>\n      )\n    }\n  }\n\n  export default FlipCard","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport InnerPage from \"../components/InnerPage\";\nimport text from \"../text\";\nimport convertImgArrToMap from \"../utils/convertImgArrToMap\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport Typography from \"../components/Typography\";\nimport FlipCard from \"../components/FlipCard\";\nimport Seo from \"../components/Seo\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  margin-bottom: 20px;\n  @media (min-width: 500px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (min-width: 900px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (min-width: 1140px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    margin-bottom: 70px;\n  }\n`;\n\nconst StyledHeader = styled(Typography)`\n  margin-top: 20px;\n  margin-bottom: 3px;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nconst StyledTitle = styled(Typography)`\n  margin-bottom: 40px;\n  :not(:first-child) {\n    margin-top: 80px;\n  }\n`;\n\nconst PeoplePage = ({ data }) => {\n  const { imgData } = data;\n  const { nodes } = imgData;\n  const imgDataMap = convertImgArrToMap(nodes);\n\n  return (\n    <Layout>\n      <Seo title=\"People\" />\n      <InnerPage title=\"People\">\n        <StyledTitle variant=\"h4\">Board of Directors</StyledTitle>\n        <Grid>\n          {text.people.bod.map((p, i) => (\n            <ImageContainer key={i}>\n              <FlipCard\n                image={getImage(imgDataMap[p.image])}\n                alt={p.name + \" portrait\"}\n                major={p.major}\n                zodiac={p.zodiac}\n                facts={p.facts}\n              />\n              <StyledHeader variant=\"subtitle\">{p.name}</StyledHeader>\n              <Typography variant=\"caption\">{p.position}</Typography>\n            </ImageContainer>\n          ))}\n        </Grid>\n        <StyledTitle variant=\"h4\">Communications Committee</StyledTitle>\n        <Grid>\n          {text.people.comm.map((p, i) => (\n            <ImageContainer key={i}>\n              <FlipCard\n                image={getImage(imgDataMap[p.image])}\n                alt={p.name + \" portrait\"}\n                major={p.major}\n                zodiac={p.zodiac}\n                facts={p.facts}\n              />\n              <StyledHeader variant=\"subtitle\">{p.name}</StyledHeader>\n              <Typography variant=\"caption\">{p.position}</Typography>\n            </ImageContainer>\n          ))}\n        </Grid>\n        <StyledTitle variant=\"h4\">Development Committee</StyledTitle>\n        <Grid>\n          {text.people.dev.map((p, i) => (\n            <ImageContainer key={i}>\n              <FlipCard\n                image={getImage(imgDataMap[p.image])}\n                alt={p.name + \" portrait\"}\n                major={p.major}\n                zodiac={p.zodiac}\n                facts={p.facts}\n              />\n              <StyledHeader variant=\"subtitle\">{p.name}</StyledHeader>\n              <Typography variant=\"caption\">{p.position}</Typography>\n            </ImageContainer>\n          ))}\n        </Grid>\n        <StyledTitle variant=\"h4\">Performance Committee</StyledTitle>\n        <Grid>\n          {text.people.perf.map((p, i) => (\n            <ImageContainer key={i}>\n              <FlipCard\n                image={getImage(imgDataMap[p.image])}\n                alt={p.name + \" portrait\"}\n                major={p.major}\n                zodiac={p.zodiac}\n                facts={p.facts}\n              />\n              <StyledHeader variant=\"subtitle\">{p.name}</StyledHeader>\n              <Typography variant=\"caption\">{p.position}</Typography>\n            </ImageContainer>\n          ))}\n        </Grid>\n      </InnerPage>\n    </Layout>\n  );\n};\n\nexport default PeoplePage;\n\nexport const query = graphql`\n  query PeoplePageQuery {\n    imgData: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"people\" }\n      }\n    ) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: CONSTRAINED)\n        }\n        name\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  margin-left: 10px;\n  > :first-child {\n    margin-bottom: ${({ spacing }) => spacing + 20}px;\n  }\n  > :last-child {\n    margin-top: ${({ spacing }) => spacing + 40}px;\n  }\n  @media (min-width: 1000px) {\n    flex-direction: row;\n    > :first-child {\n      margin-bottom: 0px;\n      order: ${({ inverse }) => (inverse ? 2 : undefined)};\n      ${({ inverse, spacing }) =>\n        inverse ? `margin-left: ${spacing}px` : `margin-right: ${spacing}px`};\n    }\n    > :last-child {\n      order: ${({ inverse }) => (inverse ? 1 : undefined)};\n    }\n  }\n`;\n\nconst TwoColumn = ({ children, inverse, spacing = 0 }) => {\n  return (\n    <Wrapper inverse={inverse} spacing={spacing}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default TwoColumn;\n","import React from \"react\";\nimport Container from \"../components/Container\";\nimport TwoColumn from \"../components/TwoColumn\";\nimport Typography from \"../components/Typography\";\nimport styled from \"styled-components\";\nimport Underline from \"../components/Underline\";\n\nconst StyledContainer = styled(Container)`\n  margin-top: 60px;\n  padding-top: 30px;\n`;\n\nconst FilterColumn = styled.div`\n  @media (min-width: 800px) {\n    flex-basis: 250px;\n    flex-shrink: 0;\n  }\n`;\n\nconst FilterContent = styled.div`\n  padding: 20px 0;\n`;\n\nconst ContentColumn = styled.div`\n  flex-grow: 1;\n`;\n\nconst InnerPage = ({ title, buttons, children }) => {\n  return (\n    <StyledContainer>\n      <TwoColumn spacing={40}>\n        <FilterColumn>\n          <Typography variant=\"h2\">{title}</Typography>\n          <Underline />\n          <FilterContent>{buttons}</FilterContent>\n        </FilterColumn>\n        <ContentColumn>{children}</ContentColumn>\n      </TwoColumn>\n    </StyledContainer>\n  );\n};\n\nexport default InnerPage;\n","import { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nconst StyledImage = styled(GatsbyImage)`\n  border: ${({ theme }) => theme.decoration.border};\n\n  ${({ clickable, theme }) => {\n    return (\n      (clickable === true || clickable === \"true\") &&\n      `\n      cursor: pointer;\n      transition: all .3s; \n      &:hover {\n        border: ${theme.decoration.borderHover};\n        transform: scale(1.03);\n      }`\n    );\n  }}\n`;\n\nexport default StyledImage;\n"],"names":["imgData","reduce","map","obj","name","CardContainer","styled","div","withConfig","displayName","componentId","Back","_ref","theme","decoration","borderHover","_ref2","palette","primarybackground","_ref3","primaryfont","_ref4","clickable","ImageThumbnail","StyledImage","SecTitle","Typography","_React$Component","FlipCard","props","_this","call","flip","setState","flipped","state","bind","_inheritsLoose","prototype","render","React","onClick","this","className","image","alt","variant","major","zodiac","facts","Grid","StyledHeader","ImageContainer","StyledTitle","data","nodes","imgDataMap","convertImgArrToMap","Layout","Seo","title","InnerPage","text","people","bod","p","i","key","getImage","position","comm","dev","perf","Wrapper","spacing","inverse","undefined","_ref5","_ref6","children","StyledContainer","Container","FilterColumn","FilterContent","ContentColumn","buttons","TwoColumn","Underline","GatsbyImage","border"],"sourceRoot":""}