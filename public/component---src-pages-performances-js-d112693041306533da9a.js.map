{"version":3,"file":"component---src-pages-performances-js-d112693041306533da9a.js","mappings":"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","sources":["webpack://lnyf/./src/utils/convertImgArrToMap.js","webpack://lnyf/./src/components/TwoColumn.js","webpack://lnyf/./src/components/InnerPage.js","webpack://lnyf/./src/components/StyledImage.js","webpack://lnyf/./src/pages/performances.js"],"sourcesContent":["const convertImgDataToMap = (imgData) => {\n  return imgData.reduce(function (map, obj) {\n    map[obj.name] = obj;\n    return map;\n  }, {});\n};\n\nexport default convertImgDataToMap;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  margin-left: 10px;\n  > :first-child {\n    margin-bottom: ${({ spacing }) => spacing + 20}px;\n  }\n  > :last-child {\n    margin-top: ${({ spacing }) => spacing + 40}px;\n  }\n  @media (min-width: 1000px) {\n    flex-direction: row;\n    > :first-child {\n      margin-bottom: 0px;\n      order: ${({ inverse }) => (inverse ? 2 : undefined)};\n      ${({ inverse, spacing }) =>\n        inverse ? `margin-left: ${spacing}px` : `margin-right: ${spacing}px`};\n    }\n    > :last-child {\n      order: ${({ inverse }) => (inverse ? 1 : undefined)};\n    }\n  }\n`;\n\nconst TwoColumn = ({ children, inverse, spacing = 0 }) => {\n  return (\n    <Wrapper inverse={inverse} spacing={spacing}>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default TwoColumn;\n","import React from \"react\";\nimport Container from \"../components/Container\";\nimport TwoColumn from \"../components/TwoColumn\";\nimport Typography from \"../components/Typography\";\nimport styled from \"styled-components\";\nimport Underline from \"../components/Underline\";\n\nconst StyledContainer = styled(Container)`\n  margin-top: 60px;\n  padding-top: 30px;\n`;\n\nconst FilterColumn = styled.div`\n  @media (min-width: 800px) {\n    flex-basis: 250px;\n    flex-shrink: 0;\n  }\n`;\n\nconst FilterContent = styled.div`\n  padding: 20px 0;\n`;\n\nconst ContentColumn = styled.div`\n  flex-grow: 1;\n`;\n\nconst InnerPage = ({ title, buttons, children }) => {\n  return (\n    <StyledContainer>\n      <TwoColumn spacing={40}>\n        <FilterColumn>\n          <Typography variant=\"h2\">{title}</Typography>\n          <Underline />\n          <FilterContent>{buttons}</FilterContent>\n        </FilterColumn>\n        <ContentColumn>{children}</ContentColumn>\n      </TwoColumn>\n    </StyledContainer>\n  );\n};\n\nexport default InnerPage;\n","import { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nconst StyledImage = styled(GatsbyImage)`\n  border: ${({ theme }) => theme.decoration.border};\n\n  ${({ clickable, theme }) => {\n    return (\n      (clickable === true || clickable === \"true\") &&\n      `\n      cursor: pointer;\n      transition: all .3s; \n      &:hover {\n        border: ${theme.decoration.borderHover};\n        transform: scale(1.03);\n      }`\n    );\n  }}\n`;\n\nexport default StyledImage;\n","import { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport InnerPage from \"../components/InnerPage\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/Seo\";\nimport StyledImage from \"../components/StyledImage\";\nimport Typography from \"../components/Typography\";\nimport text from \"../text\";\nimport convertImgArrToMap from \"../utils/convertImgArrToMap\";\n\nconst StyledHeader = styled(Typography)`\n  /* text-align: center;\n  padding-top: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center; */\n\n  margin-top: 20px;\n  margin-bottom: 5px;\n`;\n\nconst ImageThumbnail = styled(StyledImage)`\n  height: 0px;\n  padding-bottom: 60%;\n  margin-bottom: 10px;\n  @media (min-width: 600px) {\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  @media (min-width: 800px) {\n    margin-right: 0px;\n    margin-bottom: 10px;\n  }\n  @media (min-width: 100px) {\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  flex-basis: 0;\n  flex-grow: 1;\n`;\n\nconst PerformanceContent = styled.div`\n  flex-grow: 1;\n  flex-basis: 0;\n`;\n\nconst PerformanceContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  margin-right: 100px;\n  flex-direction: column;\n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n  @media (min-width: 800px) {\n    flex-direction: column;\n  }\n  @media (min-width: 1000px) {\n    flex-direction: row;\n  }\n`;\n\nconst PerformancesPage = ({ data }) => {\n  const { imgData } = data;\n  const { nodes } = imgData;\n  const imgDataMap = convertImgArrToMap(nodes);\n\n  return (\n    <Layout>\n      <Seo title=\"Performances\" />\n      <InnerPage title=\"Performances\">\n        {text.performances.map((p, i) => (\n          <PerformanceContainer key={i}>\n            <ImageContainer>\n              <ImageThumbnail\n                image={getImage(imgDataMap[p.image])}\n                alt={p.title}\n              />\n            </ImageContainer>\n            <PerformanceContent>\n              <StyledHeader variant=\"h6\">{p.title}</StyledHeader>\n              <Typography>\n                {p.performers.map((performer, index) => {\n                  const isChoreo = performer.includes(\"(choreo)\");\n                  return (\n                    <span key={index}>\n                      {isChoreo ? <strong>{performer}</strong> : performer}\n                      {index < p.performers.length - 1 && \", \"}\n                    </span>\n                  );\n                })}\n              </Typography>\n            </PerformanceContent>\n          </PerformanceContainer>\n        ))}\n      </InnerPage>\n    </Layout>\n  );\n};\n\nexport default PerformancesPage;\n\nexport const query = graphql`\n  query PerformancesPageQuery {\n    imgData: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"performances\" }\n      }\n    ) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: CONSTRAINED)\n        }\n        name\n      }\n    }\n  }\n`;\n"],"names":["imgData","reduce","map","obj","name","Wrapper","styled","div","withConfig","displayName","componentId","_ref","spacing","_ref2","_ref3","inverse","undefined","_ref4","_ref5","_ref6","children","React","StyledContainer","Container","FilterColumn","FilterContent","ContentColumn","title","buttons","TwoColumn","Typography","variant","Underline","StyledImage","GatsbyImage","theme","decoration","border","clickable","borderHover","StyledHeader","ImageThumbnail","ImageContainer","PerformanceContent","PerformanceContainer","data","nodes","imgDataMap","convertImgArrToMap","Layout","Seo","InnerPage","text","performances","p","i","key","image","getImage","alt","performers","performer","index","isChoreo","includes","length"],"sourceRoot":""}